@page "/categorias"
@using GestionInventario.Client2.Services.Categoria
@using GestionInventarios.Shared.DTOs.Categoria
@inject ICategoriaService CategoriaService
@inject NavigationManager NavigationManager

<div class="container mt-4">
    <h3 class="mb-4">Categorías</h3>

    @if (categorias == null)
    {
        <div class="alert alert-info" role="alert">
            <strong>Cargando...</strong>
        </div>
    }
    else
    {
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Id</th>
                    <th>Nombre</th>
                    <th>Descripción</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var categoria in categorias)
                {
                    <tr>
                        <td>@categoria.CategoriaId</td>
                        <td>@categoria.Nombre</td>
                        <td>@categoria.Descripcion</td>
                        <td>
                            <button class="btn btn-warning btn-sm me-2" @onclick="() => EditCategoria(categoria.CategoriaId)">Editar</button>
                            <button class="btn btn-danger btn-sm" @onclick="() => DeleteCategoria(categoria.CategoriaId)">Eliminar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <button class="btn btn-primary" @onclick="CreateCategoria">Crear Nueva Categoría</button>
    }
</div>

@code {
    private List<CategoriaGetDTO> categorias;

    protected override async Task OnInitializedAsync()
    {
        categorias = await CategoriaService.GetCategoriasAsync();
    }

    private void CreateCategoria()
    {
        NavigationManager.NavigateTo("/categorias/create");
    }

    private void EditCategoria(int id)
    {
        NavigationManager.NavigateTo($"/categorias/edit/{id}");
    }

    private async Task DeleteCategoria(int id)
    {
        await CategoriaService.DeleteCategoriaAsync(id);
        categorias = await CategoriaService.GetCategoriasAsync(); // Reload the list
    }
}
