@page "/salidas"
@using GestionInventario.Client2.Services.Salida
@using GestionInventarios.Shared.DTOs.Salida
@inject ISalidaService SalidaService
@inject NavigationManager NavigationManager

<div class="container mt-4">
    <h3 class="mb-4">Salidas</h3>

    @if (salidas == null)
    {
        <div class="alert alert-info" role="alert">
            <strong>Cargando...</strong>
        </div>
    }
    else
    {
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Id</th>
                    <th>Producto Id</th>
                    <th>Cantidad</th>
                    <th>Fecha</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var salida in salidas)
                {
                    <tr>
                        <td>@salida.SalidaId</td>
                        <td>@salida.ProductoId</td>
                        <td>@salida.Cantidad</td>
                        <td>@salida.Fecha.ToShortDateString()</td>
                        <td>
                            <button class="btn btn-warning btn-sm me-2" @onclick="() => EditSalida(salida.SalidaId)">Editar</button>
                            <button class="btn btn-danger btn-sm" @onclick="() => DeleteSalida(salida.SalidaId)">Eliminar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <button class="btn btn-primary" @onclick="CreateSalida">Crear Nueva Salida</button>
    }
</div>

@code {
    private List<SalidaGetDTO> salidas;

    protected override async Task OnInitializedAsync()
    {
        salidas = await SalidaService.GetSalidasAsync();
    }

    private void CreateSalida()
    {
        NavigationManager.NavigateTo("/salidas/create");
    }

    private void EditSalida(int id)
    {
        NavigationManager.NavigateTo($"/salidas/edit/{id}");
    }

    private async Task DeleteSalida(int id)
    {
        await SalidaService.DeleteSalidaAsync(id);
        salidas = await SalidaService.GetSalidasAsync(); // Reload the list
    }
}
