@page "/salidas/create"
@using GestionInventario.Client2.Services.Salida
@using GestionInventarios.Shared.DTOs.Salida
@using GestionInventarios.Shared.DTOs.Producto
@inject ISalidaService SalidaService
@inject NavigationManager NavigationManager

<div class="container mt-4">
    <h3 class="mb-4">Crear Salida</h3>

    <EditForm Model="newSalida" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Producto:</label>
            <InputSelect @bind-Value="newSalida.ProductoId" class="form-control">
                <option value="">Seleccione un producto</option>
                @foreach (var producto in productos)
                {
                    <option value="@producto.ProductoId">@producto.Nombre</option>
                }
            </InputSelect>
        </div>
        <div class="mb-3">
            <label class="form-label">Cantidad:</label>
            <InputNumber @bind-Value="newSalida.Cantidad" class="form-control" />
        </div>
        <div class="mb-3">
            <label class="form-label">Fecha:</label>
            <InputDate @bind-Value="newSalida.Fecha" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Guardar</button>
    </EditForm>
</div>

@code {
    private SalidaInsertDTO newSalida = new SalidaInsertDTO();
    private List<ProductoGetDTO> productos;

    protected override async Task OnInitializedAsync()
    {
        productos = await SalidaService.GetProductosAsync();
    }

    private async Task HandleValidSubmit()
    {
        var success = await SalidaService.CreateSalidaAsync(newSalida);
        if (success)
        {
            NavigationManager.NavigateTo("/salidas");
        }
        else
        {
            // Handle error
        }
    }
}
