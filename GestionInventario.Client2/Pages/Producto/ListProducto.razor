@page "/productos"
@using GestionInventario.Client2.Services.Producto
@using GestionInventarios.Shared.DTOs.Producto
@inject IProductoService ProductoService
@inject NavigationManager NavigationManager

<div class="container mt-4">
    <h3 class="mb-4">Productos</h3>

    @if (productos == null)
    {
        <div class="alert alert-info" role="alert">
            <strong>Cargando...</strong>
        </div>
    }
    else
    {
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Id</th>
                    <th>Nombre</th>
                    <th>Descripción</th>
                    <th>Precio</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var producto in productos)
                {
                    <tr>
                        <td>@producto.ProductoId</td>
                        <td>@producto.Nombre</td>
                        <td>@producto.Descripcion</td>
                        <td>@producto.Precio</td>
                        <td>
                            <button class="btn btn-warning btn-sm me-2" @onclick="() => EditProducto(producto.ProductoId)">Editar</button>
                            <button class="btn btn-danger btn-sm" @onclick="() => DeleteProducto(producto.ProductoId)">Eliminar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <button class="btn btn-primary" @onclick="CreateProducto">Crear Nuevo Producto</button>
    }
</div>

@code {
    private List<ProductoGetDTO> productos;

    protected override async Task OnInitializedAsync()
    {
        productos = await ProductoService.GetProductosAsync();
    }

    private void CreateProducto()
    {
        NavigationManager.NavigateTo("/productos/create");
    }

    private void EditProducto(int id)
    {
        NavigationManager.NavigateTo($"/productos/edit/{id}");
    }

    private async Task DeleteProducto(int id)
    {
        await ProductoService.DeleteProductoAsync(id);
        productos = await ProductoService.GetProductosAsync(); // Reload the list
    }
}
